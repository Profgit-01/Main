#include <iostream>
using namespace std;

int main() {
    int n;
    cout << "Enter order of matrix (e.g. 2 or 3): ";
    cin >> n;

    float a[10][10], I[10][10];
    cout << "Enter elements of the matrix:\n";
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            cin >> a[i][j];


    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++)
            I[i][j] = (i == j) ? 1 : 0;


    for (int i = 0; i < n; i++) {

        if (a[i][i] == 0) {
            int row = -1;
            for (int k = i + 1; k < n; k++) {
                if (a[k][i] != 0) {
                    row = k;
                    break;
                }
            }
            if (row == -1) {
                cout << "Matrix is singular, inverse does not exist.";
                return 0;
            }

            
            for (int j = 0; j < n; j++) {
                float temp = a[i][j];
                a[i][j] = a[row][j];
                a[row][j] = temp;

                temp = I[i][j];
                I[i][j] = I[row][j];
                I[row][j] = temp;
            }
        }

        
        float pivot = a[i][i];

        
        for (int j = 0; j < n; j++) {
            a[i][j] = a[i][j] / pivot;
            I[i][j] = I[i][j] / pivot;
        }

        
        for (int k = 0; k < n; k++) {
            if (k != i) {
                float factor = a[k][i];
                for (int j = 0; j < n; j++) {
                    a[k][j] = a[k][j] - factor * a[i][j];
                    I[k][j] = I[k][j] - factor * I[i][j];
                }
            }
        }
    }

    cout << "\nInverse of the given matrix is:\n";
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++)
            cout << I[i][j] << "\t";
        cout << endl;
    }

    return 0;
}
